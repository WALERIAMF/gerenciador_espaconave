// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StarWars.Data.Context;

namespace StarWars.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211107013202_start")]
    partial class start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StarWars.Models.NaveModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Carga")
                        .HasColumnType("float");

                    b.Property<string>("Classe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Passageiro")
                        .HasColumnType("int");

                    b.Property<int?>("PilotoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PilotoId");

                    b.ToTable("Naves");
                });

            modelBuilder.Entity("StarWars.Models.NavePilotoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdNave")
                        .HasColumnType("int");

                    b.Property<int>("IdPiloto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdNave");

                    b.HasIndex("IdPiloto");

                    b.ToTable("NavePilotos");
                });

            modelBuilder.Entity("StarWars.Models.PilotoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AnoNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pilotos");
                });

            modelBuilder.Entity("StarWars.Models.PilotoPlanetaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPiloto")
                        .HasColumnType("int");

                    b.Property<int>("IdPlaneta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPiloto");

                    b.HasIndex("IdPlaneta");

                    b.ToTable("PilotoPlanetas");
                });

            modelBuilder.Entity("StarWars.Models.PlanetaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clima")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Diametro")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Orbita")
                        .HasColumnType("float");

                    b.Property<int?>("PilotoId")
                        .HasColumnType("int");

                    b.Property<long>("Populacao")
                        .HasColumnType("bigint");

                    b.Property<double>("Rotacao")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PilotoId");

                    b.ToTable("Planetas");
                });

            modelBuilder.Entity("StarWars.Models.NaveModel", b =>
                {
                    b.HasOne("StarWars.Models.PilotoModel", "Piloto")
                        .WithMany("Naves")
                        .HasForeignKey("PilotoId");

                    b.Navigation("Piloto");
                });

            modelBuilder.Entity("StarWars.Models.NavePilotoModel", b =>
                {
                    b.HasOne("StarWars.Models.NaveModel", "Nave")
                        .WithMany("NavePilotos")
                        .HasForeignKey("IdNave")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWars.Models.PilotoModel", "Piloto")
                        .WithMany("NavePilotos")
                        .HasForeignKey("IdPiloto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nave");

                    b.Navigation("Piloto");
                });

            modelBuilder.Entity("StarWars.Models.PilotoPlanetaModel", b =>
                {
                    b.HasOne("StarWars.Models.PilotoModel", "Nave")
                        .WithMany("PilotoPlanetas")
                        .HasForeignKey("IdPiloto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarWars.Models.PlanetaModel", "Piloto")
                        .WithMany("PilotoPlanetas")
                        .HasForeignKey("IdPlaneta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nave");

                    b.Navigation("Piloto");
                });

            modelBuilder.Entity("StarWars.Models.PlanetaModel", b =>
                {
                    b.HasOne("StarWars.Models.PilotoModel", "Piloto")
                        .WithMany("Planetas")
                        .HasForeignKey("PilotoId");

                    b.Navigation("Piloto");
                });

            modelBuilder.Entity("StarWars.Models.NaveModel", b =>
                {
                    b.Navigation("NavePilotos");
                });

            modelBuilder.Entity("StarWars.Models.PilotoModel", b =>
                {
                    b.Navigation("NavePilotos");

                    b.Navigation("Naves");

                    b.Navigation("PilotoPlanetas");

                    b.Navigation("Planetas");
                });

            modelBuilder.Entity("StarWars.Models.PlanetaModel", b =>
                {
                    b.Navigation("PilotoPlanetas");
                });
#pragma warning restore 612, 618
        }
    }
}
